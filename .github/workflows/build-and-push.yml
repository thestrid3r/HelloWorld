name: Build and Push

on:
  push:
    branches: [ "master" ]

env:
  IMAGE_NAME: helloworld

permissions:
  contents: read
  packages: write
  id-token: write

jobs:
  build-push-secure:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set tags
        id: vars
        run: echo "TAG=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Log in to GitHub Container Registry (GHCR)
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker images
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            docker.io/thestrider/${{ env.IMAGE_NAME }}:${{ env.TAG }}
            docker.io/thestrider/${{ env.IMAGE_NAME }}:latest
            ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${{ env.TAG }}
            ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:latest
          provenance: true

      - name: Scan image with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: docker.io/thestrider/${{ env.IMAGE_NAME }}:${{ env.TAG }}
          format: table
          exit-code: 1
          ignore-unfixed: true
          vuln-type: os,library

      - name: Generate SBOM with Syft
        uses: anchore/sbom-action@v0
        with:
          image: docker.io/thestrider/${{ env.IMAGE_NAME }}:${{ env.TAG }}
          output-file: sbom.spdx.json

      - name: Install Cosign
        uses: sigstore/cosign-installer@v3

      - name: Sign image with Cosign
        run: |
          cosign sign --yes docker.io/thestrider/${{ env.IMAGE_NAME }}:${{ env.TAG }}
          cosign sign --yes ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${{ env.TAG }}
        env:
          COSIGN_EXPERIMENTAL: "1"
